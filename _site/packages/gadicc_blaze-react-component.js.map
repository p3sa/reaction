{"version":3,"sources":["meteor://ðŸ’»app/packages/gadicc:blaze-react-component/blaze-react-component-client.js"],"names":["module","export","blazeToReact","React","Component","watch","require","v","ReactDOM","Blaze","ReactiveVar","Template","BlazeComponent","componentDidMount","renderBlazeView","componentDidUpdate","prevProps","template","props","remove","_blazeView","_blazeData","_","omit","tArg","Error","JSON","stringify","renderWithData","get","findDOMNode","_blazeRef","shouldComponentUpdate","nextProps","componentWillReceiveProps","set","componentWillUnmount","render","className","c","exportDefault"],"mappings":"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","file":"/packages/gadicc_blaze-react-component.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Blaze } from 'meteor/blaze';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Template } from 'meteor/templating';\n\nclass BlazeComponent extends Component {\n\n  componentDidMount() {\n    this.renderBlazeView();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.template != this.props.template) {\n      Blaze.remove(this._blazeView);\n      this.renderBlazeView();\n    }\n  }\n\n  renderBlazeView() {\n    this._blazeData = new ReactiveVar(_.omit(this.props, 'template'));\n\n    let template, tArg = this.props.template;\n    if (typeof tArg === 'string') {\n      template = Template[tArg];\n      if (!template)\n        throw new Error(`No Template[\"${tArg}\"] exists.  If this template `\n          + \"originates in your app, make sure you have the `templating` \"\n          + \"package installed (and not, for e.g. `static-html`)\");\n    } else if (tArg instanceof Blaze.Template) {\n      template = tArg;\n    } else {\n        throw new Error(\"Invalid template= argument specified.  Expected \"\n          + \"the string name of an existing Template, or the template \"\n          + \"itself, instead got ''\" + typeof tArg + \": \"\n          + JSON.stringify(tArg));\n    }\n\n    this._blazeView = Blaze.renderWithData(\n      template,\n      () => this._blazeData.get(),\n      ReactDOM.findDOMNode(this._blazeRef)\n    );\n  }\n\n  shouldComponentUpdate(nextProps) {\n    // Never call render() for props except template again; Blaze will do what's necessary.\n    return nextProps.template !== this.props.template;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this._blazeData.set(_.omit(nextProps, 'template'));\n  }\n\n  componentWillUnmount() {\n    Blaze.remove(this._blazeView);\n  }\n\n  render() {\n    return ( <span className={this.props.className || ''} ref={(c) => this._blazeRef = c} /> );\n  }\n\n}\n\nblazeToReact = function(template) {\n  return (props) => <BlazeComponent {...props} template={template} />;\n}\n\nexport { blazeToReact };\nexport default BlazeComponent;\n"]}